name: Build

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: qun-linux
            executable: qun
          - os: windows-latest
            artifact_name: qun-windows
            executable: qun.exe

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: lukka/get-cmake@latest

    - name: Setup MSVC (Windows)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11

    - name: Install Linux system dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          gcc-14 \
          g++-14 \
          build-essential \
          cmake \
          ninja-build \
          pkg-config \
          libgl1-mesa-dev \
          libxrandr-dev \
          libxinerama-dev \
          libxcursor-dev \
          libxi-dev

    - name: Set gcc 14 as default (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 100
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-14 100

    - name: Configure and build
      uses: lukka/run-cmake@v10
      with:
        configurePreset: 'release'
        buildPreset: 'release'

    - name: Package artifacts (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir artifact
        cp release/${{ matrix.executable }} artifact/
        cp -r release/resources artifact/ 2>/dev/null || true
        cp -r release/shaders artifact/ 2>/dev/null || true
        chmod +x artifact/qun

    - name: Package artifacts (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        New-Item -ItemType Directory -Force -Path artifact
        Copy-Item release/${{ matrix.executable }} artifact/
        if (Test-Path release/resources) { Copy-Item -Recurse release/resources artifact/ }
        if (Test-Path release/shaders) { Copy-Item -Recurse release/shaders artifact/ }

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: artifact/
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/

    - name: Create release archives
      run: |
        cd artifacts/qun-linux && tar -czf ../../qun-linux.tar.gz * && cd ../..
        cd artifacts/qun-windows && zip -r ../../qun-windows.zip * && cd ../..

    - name: Upload release archives
      uses: actions/upload-artifact@v4
      with:
        name: qun-release-packages
        path: |
          qun-linux.tar.gz
          qun-windows.zip
        retention-days: 90
